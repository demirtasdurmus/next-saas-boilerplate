{
  // Configuration for javascript files
  "extends": [
    "airbnb-base",
    // ðŸ‘‡ Needed to avoid warning in next.js build: 'The Next.js plugin was not detected in your ESLint configuration'
    "next/core-web-vitals",
    "plugin:prettier/recommended"
  ],
  "rules": {
    // ðŸ‘‡ Avoid conflict rule between Prettier and Airbnb Eslint
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "endOfLine": "auto"
      }
    ]
  },
  "overrides": [
    // ðŸ‘‡ Configuration for Typescript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": ["@typescript-eslint", "unused-imports", "tailwindcss"],
      "extends": [
        "plugin:tailwindcss/recommended",
        "airbnb",
        "airbnb-typescript",
        "airbnb/hooks",
        "next/core-web-vitals",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        // ðŸ‘‡ Avoid conflict rule between Prettier and Airbnb Eslint
        "prettier/prettier": [
          "error",
          {
            "singleQuote": true,
            "endOfLine": "auto"
          }
        ],
        // ðŸ‘‡ Avoid missing file extension errors, TypeScript already provides a similar feature
        "import/extensions": "off",
        "react/jsx-curly-brace-presence": "off",
        "react/jsx-props-no-spreading": "off", // react-hook-form, and shadcn components
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "global-require": "off", // tailwind config tailwind animate require
        "unused-imports/no-unused-vars": [
          "error",
          { "argsIgnorePattern": "^_" }
        ],
        // ðŸ‘‡ https://stackoverflow.com/questions/44939304/eslint-should-be-listed-in-the-projects-dependencies-not-devdependencies
        "import/no-extraneous-dependencies": [
          "error",
          { "devDependencies": true }
        ]
      }
    },
    // ðŸ‘‡ Configuration for testing
    {
      "files": ["**/*.test.ts", "**/*.test.tsx"],
      "plugins": ["jest", "jest-formatting", "testing-library", "jest-dom"],
      "extends": [
        "plugin:jest/recommended",
        "plugin:jest-formatting/recommended",
        "plugin:testing-library/react",
        "plugin:jest-dom/recommended"
      ]
    },
    // ðŸ‘‡ Configuration for e2e testing (Playwright)
    {
      "files": ["**/*.spec.ts"],
      "extends": ["plugin:playwright/recommended"],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          { "devDependencies": true }
        ]
      }
    },
    // ðŸ‘‡ Configuration storybook
    {
      "files": ["*.stories.*"],
      "extends": ["plugin:storybook/recommended"],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true
          }
        ]
      }
    }
  ]
}
